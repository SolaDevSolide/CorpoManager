services:
  postgres:
    extends:
      file: docker-compose.yml
      service: postgres
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    extends:
      file: docker-compose.yml
      service: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./packages/backend
      dockerfile: Dockerfile
      target: builder      # ← grab the builder stage (with dev-deps)
    volumes:
      - ./packages/backend:/app
      - /app/node_modules   # keep container’s node_modules
    env_file:
      - .env
      - ./packages/backend/.env
    command: npm run start:dev
    ports:
      - "${BACKEND_PORT}:3001"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
# TODO: Implement health endpoint in the backend
#    healthcheck:
#      test: [ "CMD", "curl", "-f", "http://localhost:3001/health" ]
#      interval: 10s
#      timeout: 5s
#      retries: 5

  frontend:
    build:
      context: ./packages/frontend
      dockerfile: Dockerfile
      target: builder      # ← use builder stage (with dev-deps)
    volumes:
      - ./packages/frontend:/app
      - /app/node_modules
    env_file:
      - .env
    command: npm run dev
    ports:
      - "${FRONTEND_PORT}:3000"
    depends_on:
      backend:
        condition: service_healthy